# Generated from Expr.g4 by ANTLR 4.13.2
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,16,110,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,1,0,1,0,1,1,1,1,1,1,1,1,1,2,1,2,1,2,
        1,2,1,2,1,2,1,3,1,3,1,4,1,4,1,5,1,5,1,6,1,6,1,7,1,7,1,8,1,8,1,9,
        1,9,1,10,1,10,1,11,1,11,1,12,1,12,1,12,1,12,4,12,68,8,12,11,12,12,
        12,69,1,12,1,12,4,12,74,8,12,11,12,12,12,75,1,12,1,12,5,12,80,8,
        12,10,12,12,12,83,9,12,1,12,3,12,86,8,12,1,13,4,13,89,8,13,11,13,
        12,13,90,1,13,1,13,4,13,95,8,13,11,13,12,13,96,1,14,4,14,100,8,14,
        11,14,12,14,101,1,15,4,15,105,8,15,11,15,12,15,106,1,15,1,15,0,0,
        16,1,1,3,2,5,3,7,4,9,5,11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,
        13,27,14,29,15,31,16,1,0,6,3,0,48,57,65,70,97,102,1,0,48,55,1,0,
        49,57,1,0,48,57,2,0,65,90,97,122,3,0,9,10,13,13,32,32,119,0,1,1,
        0,0,0,0,3,1,0,0,0,0,5,1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,
        0,0,13,1,0,0,0,0,15,1,0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,
        0,0,23,1,0,0,0,0,25,1,0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,
        0,1,33,1,0,0,0,3,35,1,0,0,0,5,39,1,0,0,0,7,45,1,0,0,0,9,47,1,0,0,
        0,11,49,1,0,0,0,13,51,1,0,0,0,15,53,1,0,0,0,17,55,1,0,0,0,19,57,
        1,0,0,0,21,59,1,0,0,0,23,61,1,0,0,0,25,85,1,0,0,0,27,88,1,0,0,0,
        29,99,1,0,0,0,31,104,1,0,0,0,33,34,5,59,0,0,34,2,1,0,0,0,35,36,5,
        105,0,0,36,37,5,110,0,0,37,38,5,116,0,0,38,4,1,0,0,0,39,40,5,102,
        0,0,40,41,5,108,0,0,41,42,5,111,0,0,42,43,5,97,0,0,43,44,5,116,0,
        0,44,6,1,0,0,0,45,46,5,44,0,0,46,8,1,0,0,0,47,48,5,61,0,0,48,10,
        1,0,0,0,49,50,5,43,0,0,50,12,1,0,0,0,51,52,5,45,0,0,52,14,1,0,0,
        0,53,54,5,42,0,0,54,16,1,0,0,0,55,56,5,47,0,0,56,18,1,0,0,0,57,58,
        5,37,0,0,58,20,1,0,0,0,59,60,5,40,0,0,60,22,1,0,0,0,61,62,5,41,0,
        0,62,24,1,0,0,0,63,64,5,48,0,0,64,65,5,120,0,0,65,67,1,0,0,0,66,
        68,7,0,0,0,67,66,1,0,0,0,68,69,1,0,0,0,69,67,1,0,0,0,69,70,1,0,0,
        0,70,86,1,0,0,0,71,73,5,48,0,0,72,74,7,1,0,0,73,72,1,0,0,0,74,75,
        1,0,0,0,75,73,1,0,0,0,75,76,1,0,0,0,76,86,1,0,0,0,77,81,7,2,0,0,
        78,80,7,3,0,0,79,78,1,0,0,0,80,83,1,0,0,0,81,79,1,0,0,0,81,82,1,
        0,0,0,82,86,1,0,0,0,83,81,1,0,0,0,84,86,5,48,0,0,85,63,1,0,0,0,85,
        71,1,0,0,0,85,77,1,0,0,0,85,84,1,0,0,0,86,26,1,0,0,0,87,89,7,3,0,
        0,88,87,1,0,0,0,89,90,1,0,0,0,90,88,1,0,0,0,90,91,1,0,0,0,91,92,
        1,0,0,0,92,94,5,46,0,0,93,95,7,3,0,0,94,93,1,0,0,0,95,96,1,0,0,0,
        96,94,1,0,0,0,96,97,1,0,0,0,97,28,1,0,0,0,98,100,7,4,0,0,99,98,1,
        0,0,0,100,101,1,0,0,0,101,99,1,0,0,0,101,102,1,0,0,0,102,30,1,0,
        0,0,103,105,7,5,0,0,104,103,1,0,0,0,105,106,1,0,0,0,106,104,1,0,
        0,0,106,107,1,0,0,0,107,108,1,0,0,0,108,109,6,15,0,0,109,32,1,0,
        0,0,9,0,69,75,81,85,90,96,101,106,1,6,0,0
    ]

class ExprLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    T__0 = 1
    T__1 = 2
    T__2 = 3
    T__3 = 4
    T__4 = 5
    T__5 = 6
    T__6 = 7
    T__7 = 8
    T__8 = 9
    T__9 = 10
    T__10 = 11
    T__11 = 12
    NUMBER = 13
    FLOAT = 14
    ID = 15
    WS = 16

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "';'", "'int'", "'float'", "','", "'='", "'+'", "'-'", "'*'", 
            "'/'", "'%'", "'('", "')'" ]

    symbolicNames = [ "<INVALID>",
            "NUMBER", "FLOAT", "ID", "WS" ]

    ruleNames = [ "T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", 
                  "T__7", "T__8", "T__9", "T__10", "T__11", "NUMBER", "FLOAT", 
                  "ID", "WS" ]

    grammarFileName = "Expr.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.13.2")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


